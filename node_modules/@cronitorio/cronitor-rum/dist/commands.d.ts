import { CronitorRUMEvent } from './collect';
import { CronitorRUMConfig } from './config';
export declare type Command = 'track' | 'config' | 'captureError';
export interface CronitorRUMInterpreter {
    (command: 'track', eventName: string, dimensionOverrides?: any): void;
    (command: 'config', conf: Partial<CronitorRUMConfig>): void;
    (command: 'captureError', event: ErrorEvent, dimensionOverrides?: any): void;
}
export declare const interpret: CronitorRUMInterpreter;
export declare const captureError: (...args: any[]) => void;
export declare const track: (eventName: string, dimensionOverrides?: Partial<CronitorRUMEvent>) => void;
export declare const config: (params: Partial<CronitorRUMConfig>) => void;
export declare const load: (clientKey: string, conf?: CronitorRUMConfig | undefined) => void;
export declare const browserInit: () => void;
