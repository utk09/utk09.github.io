export interface CronitorRUMEvent {
    client_key: string;
    event_name: string;
    environment?: string;
    url?: string;
    user_agent?: string;
    referrer?: string;
    utm_source?: string;
    utm_campaign?: string;
    utm_medium?: string;
    utm_content?: string;
    utm_term?: string;
    language?: string;
    timezone?: string;
    screen_width?: number;
    page_load_dns?: number;
    page_load_connect?: number;
    page_load_ssl?: number;
    page_load_ttfb?: number;
    page_load_download?: number;
    page_load_dom_content_loaded?: number;
    page_load_render?: number;
    page_load_total?: number;
    page_load_transfer_size?: number;
    connection_type?: string;
    value?: number;
    web_vital_cls?: number;
    web_vital_fid?: number;
    web_vital_lcp?: number;
    error_type?: string;
    message?: string;
    lineno?: number;
    colno?: number;
    filename?: string;
}
export declare const collect: (eventName: string, dimensionOverrides: any) => Promise<void>;
export declare const send: (event: CronitorRUMEvent) => Promise<void>;
export declare const shouldCollect: (payload: CronitorRUMEvent) => boolean | undefined;
